# Generated by Django 5.2.6 on 2025-10-10 13:07

import django.db.models.deletion
import main.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название блюда')),
                ('nutrients', models.JSONField(blank=True, default=dict, verbose_name='Пищевая ценность на 100г')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
            },
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('daily_dose_min', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Дневная норма (г/кг массы тела) от')),
                ('daily_dose_max', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Дневная норма (г/кг массы тела) до')),
                ('short_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Краткое описание')),
                ('full_desc', models.TextField(blank=True, null=True, verbose_name='Полное описание')),
                ('img_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на изображение')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Нутриент',
                'verbose_name_plural': 'Нутриенты',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email адрес')),
                ('password', models.CharField(max_length=50, verbose_name='Пароль')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь менеджером?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', main.models.NewUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DishCompositionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DR', 'Draft'), ('DE', 'Deleted'), ('FO', 'Formed'), ('CO', 'Completed'), ('RE', 'Rejected')], default='DR', max_length=2, verbose_name='Статус')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('formation_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата формирования')),
                ('completion_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('body_mass', models.IntegerField(blank=True, default=70, null=True)),
                ('dish_mass', models.IntegerField(blank=True, default=500, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_orders', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='managed_orders', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Описание блюда',
                'verbose_name_plural': 'Описания блюд',
            },
        ),
        migrations.CreateModel(
            name='DishCompositionNutrients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_in_dish', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Количество в блюде')),
                ('daily_dose_percentage', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True, verbose_name='Доля в дневной норме')),
                ('dish_composition_request', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main.dishcompositionrequest', verbose_name='Запрос на описание')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='main.nutrient', verbose_name='Нутриент')),
            ],
            options={
                'verbose_name': 'Список нутриентов в запросе на описание',
                'verbose_name_plural': 'Списки нутриентов в запросах на описание',
                'unique_together': {('dish_composition_request', 'nutrient')},
            },
        ),
    ]
